{"version":3,"sources":["src/api/AbstractApi.js","src/api/AbstractApi.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","throw","result","done","then","apply","AbstractApi","_reduxFacade","_configStore","config","api","authHeaderName","baseUrl","_authHeaderName","routes","_abstractMethod","GET","POST","PUT","DELETE","method","url","filters","body","headers","fullUrl","_makeFullUrl","fetchConfig","_makeFetchConfig","fetch","response","_checkResponse","error","json","ok","status","statusText","text","token","getAuthToken","isJson","FormData","console","log","bodyToSend","JSON","stringify","jsonHeader","undefined","authHeader","credentials","assign","filter"],"mappings":"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","file":"AbstractApi.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nimport { injectable } from 'inversify';\nimport 'isomorphic-fetch';\nimport { HTTP_METHODS } from './httpMethods';\nimport ApiError from './ApiError';\nlet AbstractApi = class AbstractApi {\n    constructor(_reduxFacade, _configStore) {\n        this._reduxFacade = _reduxFacade;\n        this._configStore = _configStore;\n        const { authHeaderName, baseUrl } = _configStore.config.api;\n        this._authHeaderName = authHeaderName;\n        this.baseUrl = baseUrl;\n    }\n    configure(config) {\n        this.baseUrl = config.baseUrl || this.baseUrl;\n        this.routes = config.routes;\n    }\n    get(config) {\n        return this._abstractMethod(HTTP_METHODS.GET, config);\n    }\n    post(config) {\n        return this._abstractMethod(HTTP_METHODS.POST, config);\n    }\n    put(config) {\n        return this._abstractMethod(HTTP_METHODS.PUT, config);\n    }\n    delete(config) {\n        return this._abstractMethod(HTTP_METHODS.DELETE, config);\n    }\n    _abstractMethod(method, { url, filters, body, headers }) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const fullUrl = this._makeFullUrl({ url, filters });\n            const fetchConfig = this._makeFetchConfig({ method, body, headers });\n            const response = yield fetch(fullUrl, fetchConfig);\n            const error = yield this._checkResponse(response);\n            if (error)\n                throw error;\n            return response.json();\n        });\n    }\n    _checkResponse(response) {\n        return __awaiter(this, void 0, Promise, function* () {\n            let error;\n            if (!response.ok) {\n                error = new ApiError({\n                    status: response.status,\n                    statusText: response.statusText,\n                    text: yield response.text(),\n                });\n            }\n            return error;\n        });\n    }\n    /**\n     * Compute the fetch configuration\n     */\n    _makeFetchConfig({ method, body, headers } = { method: HTTP_METHODS.GET }) {\n        const token = this._reduxFacade.getAuthToken();\n        const isJson = typeof body === 'object' && !(body instanceof FormData);\n        console.log(`-------isJson: ${isJson}`);\n        const bodyToSend = isJson ? JSON.stringify(body) : body;\n        console.log(`-------bodyToSend: ${bodyToSend}`);\n        const jsonHeader = isJson ? {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        } : undefined;\n        const authHeader = token ? {\n            [this._authHeaderName]: token,\n        } : undefined;\n        return {\n            body: bodyToSend,\n            credentials: 'include',\n            headers: Object.assign({}, jsonHeader, headers, authHeader),\n            method,\n        };\n    }\n    /**\n     * Create the full url on which fetch will make a call.\n     */\n    _makeFullUrl({ url, filters } = {}) {\n        let filter = '';\n        if (filters) {\n            filter = `?Filter=${JSON.stringify(filters)}`;\n        }\n        return `${this.baseUrl}${url}${filter}`;\n    }\n};\nAbstractApi = __decorate([\n    injectable(), \n    __metadata('design:paramtypes', [Object, Object])\n], AbstractApi);\nexport default AbstractApi;\n","import { injectable } from 'inversify';\nimport 'isomorphic-fetch';\n\nimport {\n  IApi,\n  IUrlConfig,\n  IMethodConfig,\n  IFetchConfig,\n  IHeader,\n  HttpMethod,\n  IHttpError,\n} from './interfaces';\nimport { HTTP_METHODS } from './httpMethods';\nimport ApiError from './ApiError';\n\nimport {\n  IReduxFacade,\n  IRetaxConfigStore,\n  IRoutesMap, IApiServiceRuntimeConfig,\n} from 'retax-core';\n\n@injectable()\nabstract class AbstractApi implements IApi {\n  public routes: IRoutesMap;\n  public baseUrl: string;\n\n  private _authHeaderName: string;\n\n  constructor(\n    private _reduxFacade: IReduxFacade,\n    private _configStore: IRetaxConfigStore\n  ) {\n    const { authHeaderName, baseUrl } = _configStore.config.api;\n    this._authHeaderName = authHeaderName;\n    this.baseUrl = baseUrl;\n  }\n\n  public configure(config: IApiServiceRuntimeConfig): void {\n    this.baseUrl = config.baseUrl || this.baseUrl;\n    this.routes = config.routes;\n  }\n\n  public get<T>(config: IMethodConfig): Promise<T> {\n    return this._abstractMethod<T>(HTTP_METHODS.GET, config);\n  }\n\n  public post<T>(config: IMethodConfig): Promise<T> {\n    return this._abstractMethod<T>(HTTP_METHODS.POST, config);\n  }\n\n  public put<T>(config: IMethodConfig): Promise<T> {\n    return this._abstractMethod<T>(HTTP_METHODS.PUT, config);\n  }\n\n  public delete<T>(config: IMethodConfig): Promise<T> {\n    return this._abstractMethod<T>(HTTP_METHODS.DELETE, config);\n  }\n\n  private async _abstractMethod<T>(\n    method: HttpMethod,\n    { url, filters, body, headers }: IMethodConfig\n  ): Promise<T> {\n    const fullUrl = this._makeFullUrl({ url, filters });\n    const fetchConfig = this._makeFetchConfig({ method, body, headers });\n\n    const response = await fetch(fullUrl, fetchConfig);\n    const error = await this._checkResponse(response);\n\n    if (error) throw error;\n\n    return response.json();\n  }\n\n  private async _checkResponse(response: IResponse): Promise<IHttpError> {\n    let error: IHttpError;\n\n    if (!response.ok) {\n      error = new ApiError({\n        status: response.status,\n        statusText: response.statusText,\n        text: await response.text(),\n      });\n    }\n\n    return error;\n  }\n\n  /**\n   * Compute the fetch configuration\n   */\n  private _makeFetchConfig(\n    { method, body, headers }: IFetchConfig = { method: HTTP_METHODS.GET }\n  ): RequestInit {\n    const token = this._reduxFacade.getAuthToken();\n\n    const isJson = typeof body === 'object' && !(body instanceof FormData);\n    console.log(`-------isJson: ${isJson}`);\n    const bodyToSend = isJson ? JSON.stringify(body) : body;\n    console.log(`-------bodyToSend: ${bodyToSend}`);\n    const jsonHeader: IHeader = isJson ? {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    } : undefined;\n    const authHeader: IHeader = token ? {\n      [this._authHeaderName]: token,\n    } : undefined;\n\n    return {\n      body: bodyToSend,\n      credentials: 'include',\n      headers: Object.assign(\n        {},\n        jsonHeader,\n        headers,\n        authHeader\n      ),\n      method,\n    };\n  }\n\n  /**\n   * Create the full url on which fetch will make a call.\n   */\n  private _makeFullUrl(\n    { url, filters }: IUrlConfig = {}\n  ): string {\n    let filter = '';\n\n    if (filters) {\n      filter = `?Filter=${JSON.stringify(filters)}`;\n    }\n\n    return `${this.baseUrl}${url}${filter}`;\n  }\n}\n\nexport default AbstractApi;\n"]}