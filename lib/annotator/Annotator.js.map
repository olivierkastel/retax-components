{"version":3,"sources":["src/annotator/Annotator.js","src/annotator/Annotator.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","__param","paramIndex","decorator","Annotator","_injector","_enhancer","descriptor","getMetadata","RETAX_ACTIONS","push","defineMetadata","config","Target","EnhancedTarget","extendApi","_splitEntries","apis","apiKeys","keys","Apis","values","actionsCreators","actionsCreatorsKeys","ActionsCreators","apisServiceId","registerService","toString","actionsCreatorsServiceId","extendActionsCreator","serviceId","ActionsCreator","ComposedComponent","actionsCreatorKeys","actionsCreatorServiceId","extendComponent","injectableEntries","entries","map","e"],"mappings":"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","file":"Annotator.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { injectable, inject } from 'inversify';\nimport { METADATA_KEYS } from './metadataKeys';\nimport { INJECTOR } from 'retax-di';\nimport { ENHANCER } from '../inversify';\nlet Annotator = class Annotator {\n    constructor(_injector, _enhancer) {\n        this._injector = _injector;\n        this._enhancer = _enhancer;\n    }\n    action() {\n        return (target, key, descriptor) => {\n            const metadata = Reflect.getMetadata(METADATA_KEYS.RETAX_ACTIONS, target) || [];\n            metadata.push(key);\n            Reflect.defineMetadata(METADATA_KEYS.RETAX_ACTIONS, metadata, target);\n        };\n    }\n    Api(config = {}) {\n        return (Target) => {\n            const EnhancedTarget = this._enhancer.extendApi(Target, config);\n            return EnhancedTarget;\n        };\n    }\n    ActionsCreator(config = {}) {\n        return (Target) => {\n            const { keys: apiKeys, values: Apis } = this._splitEntries(config.apis);\n            const { keys: actionsCreatorsKeys, values: ActionsCreators } = this._splitEntries(config.actionsCreators);\n            const apisServiceId = this._injector.registerService(Apis, `Api ${apiKeys.toString()}`);\n            const actionsCreatorsServiceId = this._injector.registerService(ActionsCreators, `Actions Creator ${actionsCreatorsKeys.toString()}`);\n            const EnhancedTarget = this._enhancer.extendActionsCreator(Target, {\n                actionsCreators: {\n                    keys: actionsCreatorsKeys,\n                    serviceId: actionsCreatorsServiceId,\n                },\n                apis: {\n                    keys: apiKeys,\n                    serviceId: apisServiceId,\n                },\n            });\n            return EnhancedTarget;\n        };\n    }\n    LifecycleManager(config = {}) {\n        return this.ActionsCreator(config);\n    }\n    RetaxComponent(config = {}) {\n        return (ComposedComponent) => {\n            const { keys: actionsCreatorKeys, values: ActionsCreators } = this._splitEntries(config.actionsCreators);\n            const actionsCreatorServiceId = this._injector.registerService(ActionsCreators, `Actions Creator ${actionsCreatorKeys.toString()}`);\n            return this._enhancer.extendComponent(ComposedComponent, {\n                actionsCreators: {\n                    keys: actionsCreatorKeys,\n                    serviceId: actionsCreatorServiceId,\n                },\n            });\n        };\n    }\n    _splitEntries(injectableEntries = {}) {\n        const entries = Object.entries(injectableEntries);\n        const keys = entries.map(e => e[0]);\n        const values = entries.map(e => e[1]);\n        return { keys, values };\n    }\n};\nAnnotator = __decorate([\n    injectable(),\n    __param(0, inject(INJECTOR)),\n    __param(1, inject(ENHANCER)), \n    __metadata('design:paramtypes', [Object, Object])\n], Annotator);\nexport default Annotator;\n","import * as React from 'react';\nimport { injectable, inject } from 'inversify';\n\nimport { IAnnotator } from './interfaces';\nimport { METADATA_KEYS } from './metadataKeys';\n\nimport { IEnhancer } from '../enhancer';\nimport { INJECTOR, IInjector } from 'retax-di';\nimport {\n  IInjectableUserServiceMap,\n  IUserServiceConstructor,\n  IApiServiceRuntimeConfig, IApiServiceConstructor,\n  IActionsCreatorServiceConstructor,\n  IActionsCreatorServiceRuntimeConfig,\n  IRetaxComponentRuntimeConfig,\n} from 'retax-core';\n\nimport { ENHANCER } from '../inversify';\n\n@injectable()\nexport default class Annotator implements IAnnotator {\n  constructor(\n    @inject(INJECTOR) private _injector: IInjector,\n    @inject(ENHANCER) private _enhancer: IEnhancer\n  ) {}\n\n  public action(): MethodDecorator {\n    return (target: typeof Object, key: string, descriptor: PropertyDescriptor) => {\n      const metadata: string[] = Reflect.getMetadata(METADATA_KEYS.RETAX_ACTIONS, target) || [];\n\n      metadata.push(key);\n\n      Reflect.defineMetadata(METADATA_KEYS.RETAX_ACTIONS, metadata, target);\n    };\n  }\n\n  public Api(config: IApiServiceRuntimeConfig = {}): ClassDecorator {\n    return (Target: IApiServiceConstructor) => {\n\n      const EnhancedTarget = this._enhancer.extendApi(Target, config);\n\n      return EnhancedTarget;\n    };\n  }\n\n  public ActionsCreator(config: IActionsCreatorServiceRuntimeConfig = {}): ClassDecorator {\n    return (Target: IActionsCreatorServiceConstructor) => {\n      const { keys: apiKeys, values: Apis } = this._splitEntries(config.apis);\n      const { keys: actionsCreatorsKeys, values: ActionsCreators } = this._splitEntries(config.actionsCreators);\n\n      const apisServiceId = this._injector.registerService(Apis, `Api ${apiKeys.toString()}`);\n      const actionsCreatorsServiceId = this._injector.registerService(ActionsCreators, `Actions Creator ${actionsCreatorsKeys.toString()}`);\n\n      const EnhancedTarget = this._enhancer.extendActionsCreator(Target, {\n        actionsCreators: {\n          keys: actionsCreatorsKeys,\n          serviceId: actionsCreatorsServiceId,\n        },\n        apis: {\n          keys: apiKeys,\n          serviceId: apisServiceId,\n        },\n      });\n\n      return EnhancedTarget;\n    };\n  }\n\n  public LifecycleManager(config: IActionsCreatorServiceRuntimeConfig = {}): ClassDecorator {\n    return this.ActionsCreator(config);\n  }\n\n  public RetaxComponent(config: IRetaxComponentRuntimeConfig = {}): ClassDecorator {\n    return (ComposedComponent: React.ComponentClass<any>) => {\n      const { keys: actionsCreatorKeys, values: ActionsCreators } = this._splitEntries(config.actionsCreators);\n\n      const actionsCreatorServiceId = this._injector.registerService(ActionsCreators, `Actions Creator ${actionsCreatorKeys.toString()}`);\n\n      return this._enhancer.extendComponent(ComposedComponent, {\n        actionsCreators: {\n          keys: actionsCreatorKeys,\n          serviceId: actionsCreatorServiceId,\n        },\n      });\n    };\n  }\n\n  private _splitEntries(injectableEntries: IInjectableUserServiceMap = {}): { keys: string[], values: IUserServiceConstructor[] } {\n    const entries = Object.entries(injectableEntries);\n    const keys = entries.map(e => e[0]);\n    const values = entries.map(e => e[1]);\n\n    return { keys, values };\n  }\n}\n"]}